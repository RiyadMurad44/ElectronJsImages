# Start from official PHP image with Apache
FROM php:8.3-apache

# Set working directory inside the container
WORKDIR /var/www/html

# -----------------------------
# ✅ Install system dependencies and PHP extensions
# -----------------------------
RUN apt-get update && apt-get install -y \
    git unzip libzip-dev libonig-dev libxml2-dev zip curl \
    default-mysql-client \
    && docker-php-ext-install pdo pdo_mysql zip \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# -----------------------------
# ✅ Enable Apache mod_rewrite and set public folder as root
# -----------------------------
RUN a2enmod rewrite \
    && sed -i 's|DocumentRoot /var/www/html|DocumentRoot /var/www/html/public|g' /etc/apache2/sites-available/000-default.conf \
    && sed -i 's|<Directory /var/www/html>|<Directory /var/www/html/public>|g' /etc/apache2/apache2.conf

# -----------------------------
# ✅ Install Composer from the official Composer image
# -----------------------------
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# -----------------------------
# ✅ Copy only composer.json and composer.lock first to leverage Docker cache
# -----------------------------
COPY ./imagesElectron/composer.json ./composer.json
COPY ./imagesElectron/composer.lock ./composer.lock

# -----------------------------
# ✅ Install dependencies early to cache them unless composer files change
# -----------------------------
RUN composer install --no-dev --optimize-autoloader

# -----------------------------
# ✅ Now copy the rest of the Laravel application
# -----------------------------
COPY ./imagesElectron ./

# -----------------------------
# ✅ Set correct permissions for writable directories
# -----------------------------
RUN chown -R www-data:www-data storage bootstrap/cache \
    && chmod -R 775 storage bootstrap/cache

# -----------------------------
# ✅ Copy and set entrypoint script
# -----------------------------
COPY dockerShell.sh /usr/local/bin/dockerShell.sh
RUN chmod +x /usr/local/bin/dockerShell.sh

# -----------------------------
# ✅ Expose Apache's default port
#
# Expose port 80 (because we are using apache image which runs on port 80)
# That is why we expose port 80 and not port 8000 for the laravel
# -----------------------------
EXPOSE 80

# -----------------------------
# ✅ Run custom entrypoint
# -----------------------------
ENTRYPOINT ["dockerShell.sh"]
